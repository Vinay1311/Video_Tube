# Generated by Django 4.2.13 on 2024-07-04 07:06

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("app_users", "0002_alter_userdetails_password"),
    ]

    operations = [
        migrations.CreateModel(
            name="Comment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True, help_text="When this instance was created."
                    ),
                ),
                (
                    "modified",
                    models.DateTimeField(
                        auto_now=True, help_text="When this instance was modified."
                    ),
                ),
                ("content", models.TextField(blank=True, null=True)),
                ("flag_edited", models.BooleanField(default=False)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="commented_by_user",
                        to="app_users.userdetails",
                    ),
                ),
            ],
            options={"abstract": False,},
        ),
        migrations.CreateModel(
            name="VideoDetails",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True, help_text="When this instance was created."
                    ),
                ),
                (
                    "modified",
                    models.DateTimeField(
                        auto_now=True, help_text="When this instance was modified."
                    ),
                ),
                (
                    "video_file",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to="media/files/video_file/videos/",
                    ),
                ),
                (
                    "video_thumbnail",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="media/files/video_file/videos_thumbanail/",
                    ),
                ),
                ("flag_video_thumbnail", models.BooleanField(default=False)),
                (
                    "video_title",
                    models.CharField(blank=True, max_length=250, null=True),
                ),
                ("video_description", models.TextField(blank=True, null=True)),
                (
                    "video_duration",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                ("flag_is_published", models.BooleanField(default=False)),
                ("likes_count", models.IntegerField(default=0)),
                ("comments_count", models.IntegerField(default=0)),
                (
                    "users",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="user_video_details",
                        to="app_users.userdetails",
                    ),
                ),
            ],
            options={"abstract": False,},
        ),
        migrations.CreateModel(
            name="Playlist",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True, help_text="When this instance was created."
                    ),
                ),
                (
                    "modified",
                    models.DateTimeField(
                        auto_now=True, help_text="When this instance was modified."
                    ),
                ),
                (
                    "playlist_name",
                    models.CharField(blank=True, max_length=250, null=True),
                ),
                ("playlist_description", models.TextField(blank=True, null=True)),
                (
                    "playlist_thumbnail",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="media/files/video_file/playlist_thumbanail/",
                    ),
                ),
                ("number_of_videos", models.IntegerField(default=0)),
                (
                    "users",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="user_playlist",
                        to="app_users.userdetails",
                    ),
                ),
                (
                    "videos",
                    models.ManyToManyField(
                        related_name="playlist_videos", to="video.videodetails"
                    ),
                ),
            ],
            options={"abstract": False,},
        ),
        migrations.CreateModel(
            name="Like",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True, help_text="When this instance was created."
                    ),
                ),
                (
                    "modified",
                    models.DateTimeField(
                        auto_now=True, help_text="When this instance was modified."
                    ),
                ),
                ("flag_like", models.BooleanField(default=False)),
                (
                    "comment",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="like_comments",
                        to="video.comment",
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="liked_by_user",
                        to="app_users.userdetails",
                    ),
                ),
                (
                    "video",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="like_video",
                        to="video.videodetails",
                    ),
                ),
            ],
            options={"abstract": False,},
        ),
        migrations.AddField(
            model_name="comment",
            name="video",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="comments_on_video",
                to="video.videodetails",
            ),
        ),
    ]
